package com.bankapp.util;

import com.bankapp.model.Account;
import com.bankapp.model.Client;
import com.bankapp.repository.AccountRepository;
import com.bankapp.repository.ClientRepository;
import com.github.javafaker.Faker;
import org.springframework.boot.CommandLineRunner;
import org.springframework.stereotype.Component;
import org.springframework.web.client.RestTemplate;

import java.util.Random;

@Component
public class TestDataInitializer implements CommandLineRunner {
    private final AccountRepository accountRepository;
    private final RestTemplate restTemplate = new RestTemplate();
    private final Faker faker = new Faker();
    private final Random random = new Random();
    private final String AUTH_SERVICE_URL = "http://localhost:8082/auth";

    // ‚úÖ –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä ‚Äî –±–µ–∑ ClientRepository
    public TestDataInitializer(AccountRepository accountRepository) {
        this.accountRepository = accountRepository;
    }

    @Override
    public void run(String... args) throws Exception {
        System.out.println("üìå –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...");

        for (int i = 0; i < 10; i++) {
            String fullName = faker.name().fullName();
            String phone = "+79" + (random.nextInt(900000000) + 100000000);
            String username = "user" + (i + 1);
            String password = "pass" + (i + 1);

            // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ auth-—Å–µ—Ä–≤–∏—Å–µ
            String registerUrl = AUTH_SERVICE_URL + "/register?fullName=" + fullName
                    + "&phone=" + phone
                    + "&username=" + username
                    + "&password=" + password;
            restTemplate.postForObject(registerUrl, null, String.class);

            // ‚úÖ –õ–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ ‚Äî –≤—ã–∑–æ–≤ static-–º–µ—Ç–æ–¥–∞ –Ω–∞–ø—Ä—è–º—É—é
            Client client = new Client(fullName, phone, username, password);
            ClientRepository.save(client);
            System.out.println("‚úÖ –°–æ–∑–¥–∞–Ω –∫–ª–∏–µ–Ω—Ç: " + fullName + " (" + phone + ") | –õ–æ–≥–∏–Ω: " + username + ", –ü–∞—Ä–æ–ª—å: " + password);

            // –°—á–µ—Ç–∞
            int accountCount = random.nextInt(3) + 1;
            for (int j = 0; j < accountCount; j++) {
                Account account = new Account();
                double initialBalance = random.nextInt(9000) + 1000;
                account.setBalance(initialBalance);
                client.getAccounts().add(account);
                accountRepository.save(account);
                System.out.println("  ‚ûï –°—á–µ—Ç: " + account.getAccountNumber() + " | –ö–∞—Ä—Ç–∞: " + account.getCardNumber() + " | –ë–∞–ª–∞–Ω—Å: " + initialBalance + "‚ÇΩ");
            }
        }

        System.out.println("üéâ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞!");
    }
}
